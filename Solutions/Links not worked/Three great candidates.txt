//Three great candidates question.

//First thing chaala edge cases vastayi solve cheyatam kastam anukuntav.
//1.But think cheste sorting kachchitanga answer isthundi.
//yendukante 3 elments eh annadu kabatti,last 3 positive elements anna ivachchu lekunte left two negative*one greatest 
//positive element anna answer ivahcchu.
//2.inka Em edge cases raavu.But idhi O(nlogn) solution and O(1) space.
//3.In the end 3 greatest positive elements and negative elements lo two elements least negative elements 
//kanukkovali anthe.So deeniki just oka for loop O(n) time lo solve cheyachchu.
//4.Thus,ee kindha solution O(1) space and O(n) time.
#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll solve(ll arr[],int n)
{
    ll max1=INT_MIN;
    ll max2=INT_MIN;
    ll max3=INT_MIN;
    ll negmax1=INT_MAX;
    ll negmax2=INT_MAX;
    for(ll i=0;i<n;i++)
    {
        ll ele=arr[i];
        if(ele>max1)//first max update avuthondi ante second and previous maxes ni update kachchitanga cheyali.
        {
            max3=max2;
            max2=max1;
            max1=ele;
        }
        else if(ele>max2)//But some cases linke 7 8 10 9 ,Indulo 10 kante greater ga ledu, 9 ani max1 update cheyav,But it demands to update max2 and hence max3.Inko cases lo 6 8 9 7 So ee case lo third max ni update cheyali pucca. 
        {
            max3=max2;
            max2=ele;
        }
        else if(ele>max3)//6 8 9 7
        {
            max3=ele;
        }
        if(ele<negmax1)//Same process lo 2 least negative elemments ni kanukko.
        {
            negmax2=negmax1;
            negmax1=ele;
        }
        else if(ele<negmax2)
        {
            negmax2=ele;
        }
    }
    return max(negmax2*negmax1*max1,max1*max2*max3);//aa five elements ni + + + or - - + ee process use chesi greatest kanuko.
    
}
int main()
 {
	int t;
	cin>>t;
	while(t--)
	{
	int n;
	cin>>n;
	ll arr[n];
	for(int i=0;i<n;i++){
	    cin>>arr[i];
	}
	cout<<solve(arr,n)<<endl;
	
	
	}
	return 0;
}